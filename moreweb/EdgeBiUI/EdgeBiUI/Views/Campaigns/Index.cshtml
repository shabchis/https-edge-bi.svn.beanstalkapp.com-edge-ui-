@model EdgeBiUI.Models.CampaignListModel
@using Easynet.Edge.UI.Data;
           
@{
    ViewBag.Title = "Campaigns";
}

<script type="text/javascript">

    var cpa_has_changed = false;
    var targets_are_open = false;
    var campaigns_all_checked = false;
    var adgroups_all_checked = false;

    function openCampaignDetails(campaignGK) {

        var campaignsGK = "";
        var containsGK = false;

        $("#IndexDynamicTableContainer input:checked").each(function () {
            var s = this.name.split('_')[0];
            if (s == "campaignMultiSelect")
            {
                campaignsGK += this.name.split('_')[1] + ",";
                if (this.name.split('_')[1]==campaignGK)
                    containsGK = true;
            }                
        });

        if (campaignsGK.length > 0 && containsGK)
            openMultipleCampaignOrAdgroupDetails();
        else {
            $.get('@(Url.Action("EditCampaign", "Campaigns"))', { campaignGK: campaignGK }, function (data) {
            	$('#ControllerDialogDiv').html(data);
            	openController(600, 400);
            })
			.fail(window.parent.handleError);
        }
    }

    function openMultipleCampaignOrAdgroupDetails() {
        var campaignsGK = "";
        var adgroupsGK = "";
        $("#IndexDynamicTableContainer input:checked").each(function () {
            var s = this.name.split('_')[0];
            if (s == "adgroupMultiSelect")
                adgroupsGK += this.name.split('_')[1] + ",";
            if (s == "campaignMultiSelect")
                campaignsGK += this.name.split('_')[1] + ",";
        });
        if (campaignsGK.length > 0 && adgroupsGK.length > 0) {
            //alert("To edit multiple items, select items of the same type.");
            window.parent.handleError({ message: "To edit multiple items, select items of the same type." });
            return;
        }

        if (campaignsGK.length > 0) {
            
            $.get('@(Url.Action("EditMultipleCampaign", "Campaigns"))', { campaignsGK: campaignsGK }, function (data) {
                $('#ControllerDialogDiv').html(data);
                openController(600, 400);
               })
			   .fail(window.parent.handleError)
			   ;
        }

        if (adgroupsGK.length > 0) {
            
            $.get('@(Url.Action("EditMultipleAdgroups", "Campaigns"))', { adgroupsGK: adgroupsGK }, function (data) {
                $('#ControllerDialogDiv').html(data);
                openController(600, 400);
            })
			.fail(window.parent.handleError);
        }
    }


    function openAdgroupDetails(adgroupGK) {
        var adgroupsGK = "";
        var containsGK = false;
        $("#IndexDynamicTableContainer input:checked").each(function () {
            var s = this.name.split('_')[0];
            if (s == "adgroupMultiSelect") {
                adgroupsGK += this.name.split('_')[1] + ",";
                if (this.name.split('_')[1] == adgroupGK)
                    containsGK = true;
            }
        });

        if (containsGK && adgroupsGK.length > 0)
            openMultipleCampaignOrAdgroupDetails();
        else {

        	$.get('@(Url.Action("EditAdgroup", "Campaigns"))', { adgroupGK: adgroupGK }, function (data) {
        		$('#ControllerDialogDiv').html(data);
        		openController(600, 400);
        	})
			.fail(window.parent.handleError);
        }
    }

    function findCampaigns() {
        $.post($('#PageEditorForm').attr("action"), $('#PageEditorForm').serialize(), function (data) {
            $("#IndexDynamicTableContainer").html(data);
            if (targets_are_open)
                openTargets();
            else
                closeTargets(false);

            $(".IndexTableRowNoResult").css("display", "block");
        })
			.fail(window.parent.handleError);
    }

    function openAdGroups(campaignGK) {
        if ($("#Adgroups" + campaignGK).css("display") == "none") {
            $.get('@Url.Action("GetAdgroupsForCampaign","Campaigns")', { campaignGK: campaignGK }, function (data) {
                $("#Adgroups" + campaignGK).html(data);
                $("#Adgroups" + campaignGK).css("display", "block");
            })
			.fail(window.parent.handleError);
        }
        else
            $("#Adgroups" + campaignGK).css("display", "none");
    }

    function changeIcon(elem) {
        if (elem.className == "campaignButtonClose")
            elem.className = "campaignButtonOpen";
        else
            elem.className = "campaignButtonClose";
    }

    $(document).ready(function () {
        //findCampaigns();
    });

    function openTargets() {
        targets_are_open = true;
        $(".IndexTableDescCPA").css("display", "block");
        $("#OpenTargetsButton").css("display", "none")
        $("#CloseSaveTargetsButtons").css("display", "block")
    }

    function closeTargets(cancelMode) {
        targets_are_open = false;
        if (cancelMode)
            $("#CampaignsIndexTable input[originalValue]").each(function () { $(this).val($(this).attr("originalValue")); });
        $(".IndexTableDescCPA").css("display", "none");
        $("#OpenTargetsButton").css("display", "block")
        $("#CloseSaveTargetsButtons").css("display", "none")
    }

    function saveTargets() {
        if ($(".errorValue").length > 0) {
            window.parent.handleError({ message: "Invalid values." });
            //alert("wrong input data");
            return;
        }

        if (cpa_has_changed) {
            $.post($('#TargetsEditorForm').attr("action"), $('#TargetsEditorForm').serialize(), function (data) {
                //alert("Targets Saved");
                window.parent.handleInfo({ message: "Targets saved successfully." });
            });
        }
    }

    function checkvalue(e) {
        if (isNaN(e.value))
            $(e).addClass("errorValue");
        else
            $(e).removeClass("errorValue");
    }

    function selectAllCampaigns() {
        $(".adgroupMultiSelect input").each(function () { $(this).removeAttr("checked"); });
        adgroups_all_checked = false;
        if (campaigns_all_checked)
            $(".campaignMultiSelect input").each(function () { $(this).removeAttr("checked"); });
        else
            $(".campaignMultiSelect input").each(function () { $(this).attr("checked", "checked"); });
        campaigns_all_checked = !campaigns_all_checked;
       }

    function deselectAll() {
    	$(".campaignMultiSelect input").each(function () { $(this).removeAttr("checked"); });
    	$(".adgroupMultiSelect input").each(function () { $(this).removeAttr("checked"); });
    	campaigns_all_checked = false;
    	adgroups_all_checked = false;
	}

    function selectAllAdgroups() {
        $(".campaignMultiSelect input").each(function () { $(this).removeAttr("checked"); });
        campaigns_all_checked = false;

        if (adgroups_all_checked)
            $(".adgroupMultiSelect input").each(function () { $(this).removeAttr("checked"); });
        else
            $(".adgroupMultiSelect input").each(function () { $(this).attr("checked", "checked"); });
        adgroups_all_checked = !adgroups_all_checked;
    }
    
</script>

<div class="IndexTopNav">
@using (Html.BeginForm("Find", "Campaigns", FormMethod.Post, new { id = "PageEditorForm", defaultbutton="FilterButton" }))
{
    <div class="FilterSegment">
        <div class="FilterSegmentTitle">
            Channel
        </div>
        <select name="Channel">
            <option value="0">All Channels</option>
            @foreach (KeyValuePair<int, string> channel in Model.Channels.ToList().OrderBy(s=>s.Value))
            {
                <option value="@channel.Key">@channel.Value</option>
            }
        </select>
    </div>

    <div class="FilterSegment">
        <div class="FilterSegmentTitle">
            Campaign Status
        </div>
        <select name="Status">
            <option value="0">All Status</option>
            @foreach (int statusID in Model.Statuses.Keys)
            {
                <option value="@statusID">@Model.Statuses[statusID]</option>
            }
        </select>
    </div>
    
    <div class="FilterSegment">
        <div class="FilterSegmentTitle">
            Name of &nbsp;
            <input type="radio" name="typeOfSearch" value="campaign" checked="checked" style="padding:0px; margin:0px; margin-right:4px;" />Campaign &nbsp;
            <input type="radio" name="typeOfSearch" value="adgroup" style="padding:0px; margin:0px; margin-right:4px;" />Adgroup &nbsp;
        </div>
        <div>
            <input type="text" name="searchText" style="width:250px;" />
            <input type="button" value="Filter" id="FilterButton" onclick="findCampaigns()" style="" />
        </div>
    </div>
}
</div>

<div class="TableActions" style="text-align:left;">
    <div style="float:right;">
        <span id="OpenTargetsButton">
            <a href="" onclick="openTargets(); return false;">Open Targets</a>
        </span>
        <span id="CloseSaveTargetsButtons" style="display:none;">
            <a href="" onclick="saveTargets(); return false;">Save</a> &nbsp;|&nbsp;
            <a href="" onclick="closeTargets(true); return false;">Cancel</a>
        </span>
    </div>
	Select:
    <a href="" onclick="selectAllCampaigns(); return false;">All Campaigns</a> &nbsp;|&nbsp; 
    <a href="" onclick="selectAllAdgroups(); return false;">All Adgroups</a> &nbsp;|&nbsp; 
    <a href="" onclick="deselectAll(); return false;">None</a>
    @*<a href="" onclick="openMultipleCampaignOrAdgroupDetails(); return false;">Edit Multiple</a>*@
</div>

<div id="IndexDynamicTableContainer">
@Html.Partial("Table", Model.Campaigns)
</div>